on:
  pull_request:
  push:
    branches:
      - main

# Cancel redundant builds on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

name: Test and Lint
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, 3.10.0]
        node-version: [14.18]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Start CI docker compose
        run: make start-services
        env:
          DOCKER_BUILDKIT: 1
          ENV_NAME: ci
      - name: Install Chrome driver
        run: |
          export CHROME_MAIN_VERSION=`google-chrome-stable --version | sed -E 's/(^Google Chrome |\.[0-9]+ )//g'`
          export CHROMEDRIVER_VERSION=`curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAIN_VERSION"`
          curl "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O
          unzip chromedriver_linux64.zip -d ~/bin
      - name: Setup env
        run: cp .env-ci .env && cat .env | grep -v ^# >> $GITHUB_ENV
      - name: Debug env
        run: env
      - name: Install ImageMagick
        env:
          IMAGE_MAGICK_VERSION: 6.9.12-44
        run: |
          sudo apt-get --purge remove imagemagick
          sudo apt autoremove
          sudo apt-get install build-essential checkinstall libgs-dev ghostscript
          mkdir src
          cd src
          wget http://www.imagemagick.org/download/releases/ImageMagick-${IMAGE_MAGICK_VERSION}.tar.xz
          tar xf ImageMagick-${IMAGE_MAGICK_VERSION}.tar.xz
          cd ImageMagick-${IMAGE_MAGICK_VERSION}
          ./configure --with-gslib=yes
          make
          sudo checkinstall
          sudo ldconfig
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends postgresql-client
          make deps
      - name: Create test db
        run: |
          psql --version
          psql -c 'create database ksvotes_test;' -U postgres -h localhost
          psql -c "CREATE USER foo WITH PASSWORD 'bar';" -U postgres -h localhost
      - name: Make locales
        run: make locales
      - name: Make CSS
        run: make css
      - name: Debug
        run: |
          pip show Wand
          convert -version
      - name: Run tests
        run: make test jstest
        env:
          USPS_USER_ID: ${{ secrets.USPS_USER_ID }}
          NVRIS_URL: TESTING
          KSMYVOTEINFO_ENV: mock
